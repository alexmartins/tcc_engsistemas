//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCC.Clima
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://localhost/webserver/index.php", ConfigurationName = "Clima.ClimaPort")]
    public interface ClimaPort
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://localhost/webserver/index.php#previsao", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "return")]
        string previsao(int cep);

        [System.ServiceModel.OperationContractAttribute(Action = "http://localhost/webserver/index.php#previsao", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "return")]
        System.Threading.Tasks.Task<string> previsaoAsync(int cep);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClimaPortChannel : TCC.Clima.ClimaPort, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClimaPortClient : System.ServiceModel.ClientBase<TCC.Clima.ClimaPort>, TCC.Clima.ClimaPort
    {

        public ClimaPortClient()
        {
        }

        public ClimaPortClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ClimaPortClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ClimaPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ClimaPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string previsao(int cep)
        {
            return base.Channel.previsao(cep);
        }

        public System.Threading.Tasks.Task<string> previsaoAsync(int cep)
        {
            return base.Channel.previsaoAsync(cep);
        }
    }
}
